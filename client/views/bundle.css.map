{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n import { onMount } from 'svelte';\n import Lobby from './Lobby.svelte';\n import Word from './Word.svelte';\n\nconst apiUrl = \"http://localhost:3000/game/\";\n\n let joinning = true;\n let fields = {\n     \"teamName\": \"\",\n     \"playerName\": \"\",\n     \"uuid\": \"\",\n     \"role\": \"\",\n     \"players\": [],\n     \"word\": \"\",\n     \"state\": \"\",\n }\n let master = true;\n let insider = false;\n\n var timeout;\n onMount(\n     async () => {\n         setInterval(() => {\n             console.log(\"Refresh state\");\n             let res = fetch(apiUrl + fields.teamName + \"/state?uuid=\" + fields.uuid).then(r => {\n                 if (r.ok) {\n                     return r.json();\n                 }\n             })\n            .then(json => {\n                console.log(json);\n                fields.players = [];\n                for (const player in json.players) {\n                    fields.players.push(json.players[player]);\n                }\n                console.log(fields.players);\n            })\n            .catch(err => {});\n         }, 3000);\n     }\n );\n\n function getState() {\n     return function() {\n     };\n }\n\nasync function joinTeam() {\n    var team = document.getElementById(\"team\");\n    var btn = team.getElementsByTagName(\"button\");\n    btn[0].disabled = true;\n\n    const res = await fetch(apiUrl + fields.teamName + \"?playerName=\" + fields.playerName, {});\n    const player = await res.json();\n\n    if (res.ok) {\n        fields.uuid = player.id\n        fields.role = player.role\n        btn[0].disabled = false\n        team.style = \"display: none;\"\n    } else {\n        btn[0].disabled = false\n    }\n }\n\nfunction debounce(func, wait) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n};\n\nconst cryptPlaintext = debounce(event => {\n    genService(\"crypt\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({secret: event.target.value})\n    }).apply();\n}, 300)\n\nasync function start() {\n    var btn = document.getElementById(\"start\");\n    btn.disabled = true;\n\n    const res = await fetch(apiUrl + fields.teamName + \"?uuid=\" + fields.uuid, {});\n    const player = await res.json();\n\n    if (res.ok) {\n        fields.uuid = player.id\n        fields.role = player.role\n        btn[0].disabled = false\n        team.style = \"display: none;\"\n    } else {\n        btn.disabled = false;\n    }\n}\n\nasync function stop() {\n    var btn = team.getElementById(\"stop\");\n    btn.disabled = true;\n\n    const res = await fetch(apiUrl + fields.teamName + \"?uuid=\" + fields.uuid, {});\n    const player = await res.json();\n\n    if (res.ok) {\n        fields.uuid = player.id\n        fields.role = player.role\n        btn[0].disabled = false\n        team.style = \"display: none;\"\n        getPlayers().apply()\n    } else {\n        btn.disabled = false;\n    }\n}\n</script>\n\n<style>\n :global(body) {\n     background: circular-gradient(#f22 29.25%,#f60 100%) no-repeat fixed;\n     background-color: #f90;\n }\n\n h1 {\n     color: white;\n     text-transform: uppercase;\n     text-align: center;\n     font-size: 4em;\n     font-weight: 100;\n }\n\n input {\n     width: 100%;\n     font-size: 0.95em;\n }\n</style>\n\n<h1>Insider</h1>\n\n{#if joinning}\n<div id=\"team\">\n    <label>\n        <h2>Equipe</h2>\n        <input bind:value={fields.teamName}>\n        <h2>Joueur</h2>\n        <input bind:value={fields.playerName}>\n    </label>\n    <button on:click={joinTeam}>Joindre</button>\n</div>\n{/if}\n\n<Lobby players={fields.players}/>\n{#if master || insider}\n<Word/>\n{/if}\n\n\n<div id=\"stop\">\n    <button on:click={stop}>Stop</button>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA4HS,IAAI,AAAE,CAAC,AACX,UAAU,CAAE,kBAAkB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,KAAK,CACpE,gBAAgB,CAAE,IAAI,AAC1B,CAAC,AAED,EAAE,aAAC,CAAC,AACA,KAAK,CAAE,KAAK,CACZ,cAAc,CAAE,SAAS,CACzB,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACpB,CAAC,AAED,KAAK,aAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,MAAM,AACrB,CAAC"
}